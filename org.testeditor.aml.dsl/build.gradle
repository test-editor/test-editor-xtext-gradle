dependencies {
    compile project(':org.testeditor.aml.model')
    compile project(':org.testeditor.dsl.common')
	compile "org.eclipse.xtext:org.eclipse.xtext:${xtextVersion}"
	compile "org.eclipse.xtext:org.eclipse.xtext.xbase:${xtextVersion}"

    testCompile project(':org.testeditor.dsl.common.testing')
    testCompile project(':org.testeditor.aml.dsl.testing')
	testCompile "junit:junit:4.12"
    testCompile "org.mockito:mockito-core:2.22.+"
	testCompile "org.eclipse.xtext:org.eclipse.xtext.testing:${xtextVersion}"
	testCompile "org.eclipse.xtext:org.eclipse.xtext.xbase.testing:${xtextVersion}"
}

configurations {
	mwe2 {
		extendsFrom compile
	}
}

dependencies {
	mwe2 "org.eclipse.emf:org.eclipse.emf.mwe2.launch:2.9.1.201705291010"
	mwe2 "org.eclipse.xtext:org.eclipse.xtext.common.types:${xtextVersion}"
	mwe2 "org.eclipse.xtext:org.eclipse.xtext.xtext.generator:${xtextVersion}"
	mwe2 "org.eclipse.xtext:xtext-antlr-generator:[2.1.1, 3)"
    // added for Xcore support
    mwe2 'org.eclipse.emf:org.eclipse.emf.ecore.xcore:+'
    mwe2 'org.eclipse.emf:org.eclipse.emf.codegen.ecore.xtext:+'
}

task generateXtextLanguage(type: JavaExec) {
	main = 'org.eclipse.emf.mwe2.launch.runtime.Mwe2Launcher'
	classpath = configurations.mwe2
	inputs.file "src/main/java/org/testeditor/aml/dsl/GenerateAml.mwe2"
	inputs.file "src/main/java/org/testeditor/aml/dsl/Aml.xtext"
	outputs.dir "src/main/xtext-gen"
	args += "src/main/java/org/testeditor/aml/dsl/GenerateAml.mwe2"
	args += "-p"
	args += "rootPath=/${projectDir}/.."
}

generateXtext.dependsOn(generateXtextLanguage)
clean.dependsOn(cleanGenerateXtextLanguage)
eclipse.classpath.plusConfigurations += [configurations.mwe2]
